name: Deploy Workflow

on:
  push:
    branches:
      - "feature/GYM-136-BE-Automate-deployment-to-AWS" # For testing purposes
  pull_request:
    types:
      - closed
    branches:
      - main
  workflow_run:
    workflows: [ "Test Workflow" ]
    types:
      - completed

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'pull_request' && github.event.pull_request.merged == true) || 
      (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') || 
      (github.event_name == 'push' && github.ref == 'refs/heads/feature/GYM-136-BE-Automate-deployment-to-AWS')
  # for testing purposes

    steps: # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up JDK for Gradle (optional if needed)
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # Step 3: Build the Docker image
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/gymapp-backend-modulith:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/gymapp-backend-modulith:latest

      # Step 4: Deploy to AWS EC2
      - name: Deploy to AWS EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USER }}
          key: ${{ secrets.AWS_SSH_KEY }}
          source: "docker-compose-deployment.yaml"
          target: "/home/ec2-user/be/"

      - name: Restart Docker Containers on EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USER }}
          key: ${{ secrets.AWS_SSH_KEY }}
          script: |
            cd /home/ec2-user/be/${{ secrets.AWS_USER }}
            docker-compose down
            docker-compose pull
            docker-compose up -d