spring:
  application:
    name: Gym App Backend

  config:
    activate:
      on-profile: deployment

  datasource:
    url: jdbc:postgresql://postgres:5432/gym_app_db
    username: gym_app_user
    password: gym_app_pass
    hikari:
      auto-commit: false

  liquibase:
    change-log: classpath:/db/changelog/db.changelog-master.yaml
    liquibase-schema: public

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: true
    open-in-view: false

  springdoc:
    api-docs:
      path: /api-docs
    swagger-ui:
      path: /swagger-ui.html

  management:
    endpoints:
      web:
        exposure:
          include: health

  kafka:
    replicas: 3
    partitions: 3
    consumer:
      bootstrap-servers: kafka1:9092,kafka2:9093,kafka3:9094
      key-deserializer: org.apache.kafka.common.serialization.UUIDDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      group-id: gym-app-listener-group
    producer:
      bootstrap-servers: kafka1:9092,kafka2:9093,kafka3:9094
      key-serializer: org.apache.kafka.common.serialization.UUIDSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    topics:
      account-register: "userProfile.create-account"
      retry: "common.RETRY"
      dead-letter: "common.DLT"

app:
  frontend-url: "https://app.workout-app.online"
